package demo.sapi.models;

// Generated 20 nov. 2014 18:11:23 by Hibernate Tools 3.6.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.ColumnTransformer;

import fr.socgen.sis.aga.tools.AgaConstants;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "USERS", catalog = "`sis-aga`", uniqueConstraints = @UniqueConstraint(columnNames = "USERNAME"))
public class Users implements java.io.Serializable {

    private Integer id;
    private Profil profil;
    private String username;
    private String salt;
    private String password;
    private String libUser;
    private boolean isActive;
    private boolean anonymiser;
    private Set<Perimeter> perimeters = new HashSet(0);

    public Users() {
    }

    public Users(String username, String salt, String password, String libUser,
            boolean isActive, boolean anonymiser) {
        this.username = username;
        this.salt = salt;
        this.password = password;
        this.libUser = libUser;
        this.isActive = isActive;
        this.anonymiser = anonymiser;
    }

    public Users(Profil profil, String username, String salt, String password,
            String libUser, boolean isActive, boolean anonymiser,
            Set<Perimeter> perimeters) {
        this.profil = profil;
        this.username = username;
        this.salt = salt;
        this.password = password;
        this.libUser = libUser;
        this.isActive = isActive;
        this.anonymiser = anonymiser;
        this.perimeters = perimeters;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PROFIL_ID")
    public Profil getProfil() {
        return this.profil;
    }

    public void setProfil(Profil profil) {
        this.profil = profil;
    }

    @Column(name = "USERNAME", unique = true, nullable = false, length = 25)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "SALT", nullable = false, length = 32)
    public String getSalt() {
        return this.salt;
    }

    public void setSalt(String salt) {
        this.salt = salt;
    }

    @Column(name = "PASSWORD", nullable = false)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "LIB_USER", nullable = false, length = 50, columnDefinition = "blob")
    @ColumnTransformer(read = "CONVERT(AES_DECRYPT(LIB_USER, '"
            + SapiConstants.AES_KEY + "') USING utf8)", write = "AES_ENCRYPT(CONVERT(? USING utf8), '"
            + SapiConstants.AES_KEY + "')")
    public String getLibUser() {
        return this.libUser;
    }

    public void setLibUser(String libUser) {
        this.libUser = libUser;
    }

    @Column(name = "IS_ACTIVE", nullable = false, columnDefinition = "bit")
    public boolean isIsActive() {
        return this.isActive;
    }

    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    @Column(name = "ANONYMISER", nullable = false, columnDefinition = "bit")
    public boolean isAnonymiser() {
        return this.anonymiser;
    }

    public void setAnonymiser(boolean anonymiser) {
        this.anonymiser = anonymiser;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
    public Set<Perimeter> getPerimeters() {
        return this.perimeters;
    }

    public void setPerimeters(Set<Perimeter> perimeters) {
        this.perimeters = perimeters;
    }
}
